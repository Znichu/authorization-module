{"version":3,"sources":["components/Menu/Menu.tsx","api/signInApi.ts","utils/CookieToken/SaveTokenCookie.ts","redux/sign-in-reducer.ts","components/Profile/Profile.tsx","utils/validators/validators.ts","components/Sign-In/SignIn.tsx","api/registerApi.ts","redux/register-reducer.ts","components/Register/Register.tsx","api/forgot-page.ts","redux/forgot-reducer.ts","components/Forgot/Forgot.tsx","components/Set-New-Pass/SetNewPass.tsx","App.tsx","redux/store.ts","index.tsx","components/Forgot/Forgot.module.css","components/Set-New-Pass/SetNewPass.module.css","components/Sign-In/SignIn.module.css","components/Register/Register.module.css"],"names":["HeaderMenu","mode","Item","key","to","instance","axios","create","baseURL","authAPI","email","password","rememberMe","post","then","res","data","catch","e","delete","cookie","Cookie","get","value","set","remove","initialState","_id","isAdmin","name","verified","publicCardPacksCount","__v","token","success","setAuthUserDataSuccess","type","authUserData","signOut","dispatch","a","signInReducer","state","action","Profile","props","useDispatch","onClick","schemaSignInForm","yup","shape","required","min","schemaRegisterForm","passwordConfirmation","label","test","this","parent","schemaForgotPage","schemaSetNewPassForm","SignIn","useForm","resolver","yupResolver","register","handleSubmit","errors","control","useSelector","singInReducer","className","style","signInPage","onSubmit","saveTokenInCookie","console","log","message","signIn","signInPage__form","as","Input","placeholder","showIcon","Password","ref","htmlType","registerAPI","SET_USER_DATA_SUCCESS","addedUser","created","updated","actions","userData","payload","Register","isAuth","userRegistrationCallback","useCallback","userRegisteration","registerPage","registerPage__form","forgotPageAPI","html1","html2","response","errorMessage","changePassword","error","Forgot","forgotPage","resetPassword","closable","forgotForm","SetNewPass","setNewPassPage","setNewPassPage__info","setNewPassPage__form","App","path","render","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fdfe1cf2.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Menu } from 'antd';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport function HeaderMenu() {\r\n    return (\r\n        <Menu mode=\"horizontal\">\r\n            <Menu.Item key=\"profile\">\r\n                <NavLink to='/profile'>Profile</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"sign-in\">\r\n                <NavLink to='/sign-in'>Sign-in</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"register\">\r\n                <NavLink to='/register'>Register</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"forgot\">\r\n                <NavLink to='/forgot'>Forgot</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"set-new-pass\">\r\n                <NavLink to='/set-new-password'>Set new pass</NavLink>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/1.0/'\r\n    /*baseURL: \"https://cards-nya-back.herokuapp.com/1.0/\"*/\r\n});\r\n\r\ntype ResponseType = {\r\n    _id: string\r\n    email: string\r\n    rememberMe: boolean\r\n    isAdmin: boolean\r\n    name: string\r\n    verified: string\r\n    publicCardPacksCount: number\r\n    __v: number\r\n    password: string\r\n    token: string\r\n    success: boolean\r\n};\r\n\r\nexport const authAPI = {\r\n    signIn(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post<ResponseType>(`auth/login`, {email, password, rememberMe})\r\n            .then(res => res.data)\r\n            .catch(e => e)\r\n    },\r\n    signOut() {\r\n        return instance.delete(`auth/login`)\r\n            .then(res => res.data)\r\n            .catch(e => e)\r\n    }\r\n};","import Cookie from 'universal-cookie'\r\n\r\nconst cookie = new Cookie();\r\n\r\nclass saveTokenInCookie {\r\n\r\n    get (key: string) {\r\n        return cookie.get(key)\r\n    }\r\n\r\n    set (key: string, value: string) {\r\n        cookie.set(key, value)\r\n    }\r\n\r\n    remove(key: string) {\r\n        cookie.remove(key)\r\n    }\r\n}\r\n\r\nexport default new saveTokenInCookie();","import {authAPI} from '../api/signInApi';\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./store\";\r\nimport saveTokenInCookie from \"../utils/CookieToken/SaveTokenCookie\"\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nexport type ThunkType = ThunkAction<void, AppStateType, {}, setAuthUserDataSuccessType>\r\n\r\ntype initialStateType = {\r\n    _id: string | null\r\n    email: string | null\r\n    rememberMe: boolean\r\n    isAdmin: boolean\r\n    name: string | null\r\n    verified: string | null\r\n    publicCardPacksCount: number | null\r\n    __v: number | null\r\n    password: string | null\r\n    token: string | null\r\n    success: boolean\r\n};\r\n\r\nconst initialState: initialStateType = {\r\n    _id: null,\r\n    email: null,\r\n    rememberMe: false,\r\n    isAdmin: false,\r\n    name: null,\r\n    verified: null,\r\n    publicCardPacksCount: null,\r\n    __v: null,\r\n    password: null,\r\n    token: null,\r\n    success: false\r\n};\r\n\r\n\r\n//reducer\r\nconst signInReducer = (state = initialState, action: setAuthUserDataSuccessType) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.authUserData\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n//actionType\r\nexport type setAuthUserDataSuccessType = {\r\n    type: typeof SET_USER_DATA,\r\n    authUserData: initialStateType\r\n}\r\n\r\n//action\r\nexport const setAuthUserDataSuccess = (data: initialStateType): setAuthUserDataSuccessType => ({\r\n    type: SET_USER_DATA,\r\n    authUserData: data\r\n});\r\n\r\n//thunk to login\r\nexport const signIn = (email: string, password: string, rememberMe: boolean): ThunkType => async (dispatch) => {\r\n    try {\r\n        let data = await authAPI.signIn(email, password, rememberMe);\r\n        saveTokenInCookie.set('auth_token', data.token);\r\n        dispatch(setAuthUserDataSuccess(data))\r\n    } catch (e) {\r\n        console.log(e.message)\r\n    }\r\n\r\n\r\n};\r\n\r\n//thunk to logout\r\nexport const signOut = (): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.signOut();\r\n    if (data.success) {\r\n        dispatch(setAuthUserDataSuccess({\r\n            _id: null,\r\n            email: null,\r\n            rememberMe: false,\r\n            isAdmin: false,\r\n            name: null,\r\n            verified: null,\r\n            publicCardPacksCount: null,\r\n            __v: null,\r\n            password: null,\r\n            token: null,\r\n            success: false\r\n        }))\r\n    }\r\n};\r\n\r\n\r\nexport default signInReducer;\r\n","import * as React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {signOut} from \"../../redux/sign-in-reducer\";\r\n\r\ntype Props = {};\r\nexport const Profile = (props: Props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const logout = () => {\r\n        dispatch(signOut)\r\n    };\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3>Profile</h3>\r\n            </div>\r\n            <button onClick={logout}>Logout</button>\r\n        </div>\r\n    );\r\n};","import * as yup from \"yup\";\r\n\r\nexport const schemaSignInForm = yup.object().shape({\r\n    email: yup.string().required().min(2),\r\n    password: yup.string().required().min(8),\r\n});\r\n\r\nexport const schemaRegisterForm = yup.object().shape({\r\n    email: yup.string().email().required().min(7),\r\n    password: yup.string().required().min(8),\r\n    passwordConfirmation: yup.string().required().label('Confirm password')\r\n        .test('passwordConfirmation', 'Passwords must match!', function (value) {\r\n            return this.parent.password === value;\r\n        })\r\n});\r\nexport const schemaForgotPage = yup.object().shape({\r\n    email: yup.string().email().required(),\r\n});\r\nexport const schemaSetNewPassForm = yup.object().shape({\r\n    password: yup.string().required().min(8),\r\n    passwordConfirmation: yup.string().required()\r\n        .test('passwordConfirmation', 'Passwords must match!', function (value) {\r\n            return this.parent.password === value;\r\n        })\r\n});","import React from 'react';\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers\";\r\nimport {Alert, Button, Input} from \"antd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {signIn} from \"../../redux/sign-in-reducer\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {Redirect, Link} from 'react-router-dom';\r\nimport style from './SignIn.module.css'\r\nimport {schemaSignInForm} from \"../../utils/validators/validators\";\r\n\r\n//react-hook-form\r\ntype  LoginData = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean\r\n}\r\n\r\n//using hook\r\nexport const SignIn = () => {\r\n    const dispatch = useDispatch();\r\n    const {register, handleSubmit, errors, control} = useForm<LoginData>({\r\n        resolver: yupResolver(schemaSignInForm)\r\n    });\r\n\r\n//dispatch thunk\r\n    const onSubmit = (data: LoginData) => {\r\n        let {email, password, rememberMe} = data;\r\n        dispatch(signIn(email, password, rememberMe));\r\n    };\r\n\r\n    //checking logged user or not\r\n    const isAuth = useSelector((state: AppStateType) => state.singInReducer.success);\r\n\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={`/profile`}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.signInPage}>\r\n            <div>\r\n                <h3>SignIn</h3>\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)} className={style.signInPage__form}>\r\n                <div>\r\n                    <Controller\r\n                        as={Input}\r\n                        name=\"email\"\r\n                        control={control}\r\n                        placeholder=\"Email\"\r\n                    />\r\n                    {errors.email && <Alert message=\"Login is required\" type=\"error\" showIcon/>}\r\n                </div>\r\n                <div>\r\n                    <Controller\r\n                        as={Input.Password}\r\n                        name=\"password\"\r\n                        control={control}\r\n                        placeholder=\"Password\"\r\n                    />\r\n                    {errors.password && <Alert message=\"Password is required\" type=\"error\" showIcon/>}\r\n                </div>\r\n\r\n                <Link to='/forgot'>Forgot password?</Link>\r\n                <div>\r\n                    <input type='checkbox' name='rememberMe' ref={register}/>\r\n                    {` Remember me`}\r\n                </div>\r\n                <Button htmlType='submit' type='primary'>Sign In</Button>\r\n            </form>\r\n            <Link to='/register'>Registration</Link>\r\n        </div>\r\n    );\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:7542/1.0/\",\r\n/*\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/\"\r\n*/\r\n});\r\n\r\ntype addedUserResponseType = {\r\n    created: string,\r\n    email: string,\r\n    isAdmin: boolean,\r\n    name: string,\r\n    publicCardPacksCount: number,\r\n    rememberMe: boolean,\r\n    updated: string,\r\n    verified: boolean,\r\n    __v: number,\r\n    _id: string,\r\n}\r\n\r\ntype ResponseType = {\r\n    addedUser: addedUserResponseType,\r\n    success: boolean\r\n}\r\n\r\nexport const registerAPI = {\r\n    register: (email: string, password: string) => instance.post<ResponseType>(`auth/register`, {email: email, password: password})\r\n        .then(res => res.data)\r\n};","import {registerAPI} from \"../api/registerApi\";\r\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\r\nimport {AppStateType} from \"./store\";\r\n\r\nconst SET_USER_DATA_SUCCESS = 'authorization-module-project/registerReducer/SET_USER_DATA_SUCCESS';\r\n\r\ntype addedUser = {\r\n    created: string | null,\r\n    email: string | null,\r\n    isAdmin: boolean,\r\n    name: string | null,\r\n    publicCardPacksCount: number | null,\r\n    rememberMe: boolean,\r\n    updated: string | null,\r\n    verified: boolean,\r\n    __v: number | null,\r\n    _id: string | null,\r\n}\r\n\r\ntype initialState = {\r\n    addedUser: addedUser,\r\n    success: boolean\r\n};\r\n\r\nconst initialState: initialState = {\r\n    addedUser: {\r\n        created: null,\r\n        email: null,\r\n        isAdmin: false,\r\n        name: null,\r\n        publicCardPacksCount: null,\r\n        rememberMe: false,\r\n        updated: null,\r\n        verified: false,\r\n        __v: null,\r\n        _id: null,\r\n    },\r\n    success: false\r\n};\r\n\r\nexport const registerReducer = (state: initialState = initialState, action: registerActionTypes) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                addedUser: {...action.payload.addedUser},\r\n                success: action.payload.success\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//Actions\r\ntype InferRegisterActionTypes<T> = T extends {[key: string]: infer U} ? U : never;\r\ntype registerActionTypes = ReturnType<InferRegisterActionTypes<typeof actions>>\r\n\r\nconst actions = {\r\n    registerUserDataSuccess : (userData: initialState) => ({type: SET_USER_DATA_SUCCESS, payload: {...userData}} as const),\r\n}\r\n\r\n//Thunks\r\ntype ThunkType = ThunkAction<void, AppStateType, {}, registerActionTypes>\r\ntype ThunkDispatchType = ThunkDispatch<AppStateType, {}, registerActionTypes>\r\n\r\nexport const userRegisteration = (email: string, password: string): ThunkType => async (dispatch: ThunkDispatchType) => {\r\n    try {\r\n        const data = await registerAPI.register(email, password);\r\n        dispatch(actions.registerUserDataSuccess(data))\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n};\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {userRegisteration} from \"../../redux/register-reducer\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {yupResolver} from '@hookform/resolvers';\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {useCallback} from \"react\";\r\nimport {Button, Input} from \"antd\";\r\nimport style from './Register.module.css'\r\nimport {schemaRegisterForm} from \"../../utils/validators/validators\";\r\n\r\n\r\n\r\ntype IFormInputs = {\r\n    email: string,\r\n    password: string,\r\n    passwordConfirmation: string\r\n}\r\n\r\nexport const Register = () => {\r\n\r\n    const isAuth = useSelector((state: AppStateType) => state.register.success);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {handleSubmit, errors, control} = useForm<IFormInputs>({\r\n        resolver: yupResolver(schemaRegisterForm)\r\n    });\r\n\r\n    const userRegistrationCallback = useCallback((email: string, password: string) =>\r\n            dispatch(userRegisteration(email, password)),\r\n        [dispatch]\r\n    );\r\n\r\n    const onSubmit = (data: IFormInputs) => {\r\n        userRegistrationCallback(data.email, data.password);\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Redirect to=\"/sign-in\"/>\r\n    }\r\n    return (\r\n        <div className={style.registerPage}>\r\n            <div>\r\n                <h3>Registration</h3>\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)} className={style.registerPage__form}>\r\n                <Controller\r\n                    as={Input}\r\n                    name=\"email\"\r\n                    control={control}\r\n                    placeholder=\"Email\"\r\n                />\r\n                <p>{errors.email?.message}</p>\r\n                <Controller\r\n                    as={Input.Password}\r\n                    name=\"password\"\r\n                    type='password'\r\n                    control={control}\r\n                    placeholder=\"Password\"\r\n                />\r\n                <p>{errors.password?.message}</p>\r\n\r\n                <Controller\r\n                    as={Input.Password}\r\n                    type='password'\r\n                    name=\"passwordConfirmation\"\r\n                    control={control}\r\n                    placeholder=\"Confirm password\"\r\n                />\r\n                <p>{errors.passwordConfirmation?.message}</p>\r\n                <Button htmlType='submit' type=\"primary\">Register</Button>\r\n            </form>\r\n            <Link to='/sign-in'>Sign In</Link>\r\n        </div>\r\n    );\r\n};","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    // baseURL: \"http://localhost:7542/1.0/\",\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/\"\r\n});\r\n\r\n\r\nexport const forgotPageAPI = {\r\n    forgot (email: string, html1 = \"<a href='http://localhost:3000/authorization-module#/set-new-password'\", html2 = \">reset-password-link</a>\") {\r\n        return instance.post(\"/auth/forgot\", {email, html1, html2})\r\n            .then(response => response.data)\r\n    }\r\n}","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType} from \"./store\";\r\nimport {forgotPageAPI} from \"../api/forgot-page\";\r\nimport saveTokenInCookie from \"../utils/CookieToken/SaveTokenCookie\"\r\n\r\n//State\r\nlet initialState = {\r\n    success: false,\r\n    errorMessage: \"\",\r\n}\r\n\r\n//Reducer\r\nexport const forgotReducer = (state: InitialState = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'FORGOTPAGE/CHANGE_PASSWORD_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                success: action.success\r\n            }\r\n        }\r\n        case 'FORGOTPAGE/CHANGE_PASSWORD_ERROR': {\r\n            return {\r\n                ...state,\r\n                errorMessage: action.errorMessage\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Action\r\ntype setChangePasswordSuccessType = {\r\n    type: 'FORGOTPAGE/CHANGE_PASSWORD_SUCCESS'\r\n    success: boolean\r\n}\r\nconst setChangePasswordSuccess = (success: boolean): setChangePasswordSuccessType => ({\r\n    type: 'FORGOTPAGE/CHANGE_PASSWORD_SUCCESS',\r\n    success\r\n});\r\ntype setChangePasswordErrorType = {\r\n    type: 'FORGOTPAGE/CHANGE_PASSWORD_ERROR'\r\n    errorMessage: string\r\n}\r\nconst setChangePasswordError = (errorMessage: string): setChangePasswordErrorType => ({\r\n    type: 'FORGOTPAGE/CHANGE_PASSWORD_ERROR',\r\n    errorMessage\r\n});\r\n\r\n//Thunk\r\nexport const changePassword = (email: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        let data = await forgotPageAPI.forgot(email);\r\n        dispatch(setChangePasswordSuccess(data.success))\r\n    } catch (e) {\r\n        dispatch(setChangePasswordError(e.response.data.error));\r\n        console.log(e.message)\r\n    }\r\n}\r\n\r\n//Types\r\ntype ActionsType = setChangePasswordSuccessType | setChangePasswordErrorType\r\ntype InitialState = typeof initialState\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, {}, ActionsType>\r\n","import React, {useCallback} from 'react';\r\nimport {Controller, useForm} from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport {Button, Input, Alert} from 'antd';\r\nimport style from './Forgot.module.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {changePassword} from \"../../redux/forgot-reducer\";\r\nimport { schemaForgotPage } from '../../utils/validators/validators';\r\n\r\ntype InputEmailType = {\r\n    email: string\r\n}\r\n\r\nexport const Forgot: React.FC = () => {\r\n    const {handleSubmit, errors, control} = useForm<InputEmailType>({ resolver: yupResolver(schemaForgotPage) });\r\n    const onSubmit = (data: InputEmailType) => {\r\n        resetPassword(data.email);\r\n    };\r\n\r\n    const errorMessage = useSelector((state: AppStateType) => state.forgotPage.errorMessage);\r\n    const dispatch = useDispatch();\r\n    const resetPassword = useCallback(\r\n        (data) => dispatch( changePassword(data) ),\r\n        [dispatch]\r\n    )\r\n\r\n    return (\r\n        <div className={style.forgotPage}>\r\n            { errorMessage &&\r\n            <Alert message={errorMessage} type=\"warning\" showIcon closable />\r\n            }\r\n            <h3>Forgot password?</h3>\r\n            <span>Please enter <b>email</b> that you used to sign in</span>\r\n            <form className={style.forgotForm} onSubmit={handleSubmit(onSubmit)}>\r\n                <div className={style.error}>\r\n                    { errors.email\r\n                        ? <Alert message={errors.email?.message} type=\"error\" showIcon />\r\n                        : null\r\n                    }\r\n                </div>\r\n                <Controller\r\n                    as={Input}\r\n                    name=\"email\"\r\n                    control={control}\r\n                    placeholder=\"Email\"\r\n                />\r\n                <Button htmlType=\"submit\" type='primary'>Send email</Button>\r\n            </form>\r\n            <Link to={'/sign-in'}>Sign In</Link>\r\n        </div>\r\n    );\r\n};","import React, {useCallback} from 'react';\r\nimport style from \"./SetNewPass.module.css\";\r\nimport {Controller, useForm} from \"react-hook-form\";\r\nimport {Button, Input} from \"antd\";\r\nimport {yupResolver} from \"@hookform/resolvers\";\r\nimport {schemaSetNewPassForm} from \"../../utils/validators/validators\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {changePassword} from \"../../redux/forgot-reducer\";\r\n\r\ntype SetNewPassType = {\r\n    password: string\r\n    passwordConfirmation: string\r\n}\r\n\r\nexport const SetNewPass = () => {\r\n\r\n    const {handleSubmit, errors, control} = useForm<SetNewPassType>({\r\n        resolver: yupResolver(schemaSetNewPassForm)\r\n    });\r\n    const onSubmit = (data: SetNewPassType) => {\r\n        resetPassword(data.password);\r\n        console.log(data)\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const resetPassword = useCallback(\r\n        (data) => dispatch( changePassword(data) ),\r\n        [dispatch]\r\n    )\r\n\r\n    return (\r\n        <div className={style.setNewPassPage}>\r\n            <div className={style.setNewPassPage__info}>\r\n                <h3>Choose a New Password</h3>\r\n                <span>Create a new password that is at least 8 characters long</span>\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)} className={style.setNewPassPage__form}>\r\n                <Controller\r\n                    as={Input.Password}\r\n                    name=\"password\"\r\n                    type='password'\r\n                    control={control}\r\n                    placeholder=\"Password\"\r\n                />\r\n                <p>{errors.password?.message}</p>\r\n\r\n                <Controller\r\n                    as={Input.Password}\r\n                    type='password'\r\n                    name=\"passwordConfirmation\"\r\n                    control={control}\r\n                    placeholder=\"Confirm password\"\r\n                />\r\n                <p>{errors.passwordConfirmation?.message}</p>\r\n                <Button htmlType='submit' type=\"primary\">Continue</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport {HeaderMenu} from \"./components/Menu/Menu\";\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {Profile} from \"./components/Profile/Profile\";\r\nimport {SignIn} from \"./components/Sign-In/SignIn\";\r\nimport {Register} from \"./components/Register/Register\";\r\nimport {Forgot} from \"./components/Forgot/Forgot\";\r\nimport {SetNewPass} from \"./components/Set-New-Pass/SetNewPass\";\r\n\r\nfunction App() {\r\n    return (\r\n\r\n            <div className='main'>\r\n                <HeaderMenu/>\r\n                <Switch>\r\n                {/*<Route path='/' render={() => <Redirect to=\"/sign-in\"/>}/>*/}\r\n                <Route path='/profile' render={() => <Profile/>}/>\r\n                <Route path='/sign-in' render={() => <SignIn/>}/>\r\n                <Route path='/register' render={() => <Register/>}/>\r\n                <Route path='/forgot' render={() => <Forgot/>}/>\r\n                <Route path='/set-new-password' render={() => <SetNewPass/>}/>\r\n                </Switch>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {forgotReducer} from \"./forgot-reducer\";\r\nimport { registerReducer } from \"./register-reducer\";\r\nimport signInReducer from \"./sign-in-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    forgotPage: forgotReducer,\r\n    register: registerReducer,\r\n    singInReducer: signInReducer\r\n});\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nexport let store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type InferActionTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>,\r\n    document.getElementById('root')\r\n)\r\n;\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPage\":\"Forgot_forgotPage__neKLE\",\"error\":\"Forgot_error__BLT2U\",\"forgotForm\":\"Forgot_forgotForm__UfYTJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setNewPassPage\":\"SetNewPass_setNewPassPage__3smxh\",\"setNewPassPage__info\":\"SetNewPass_setNewPassPage__info__DRlit\",\"setNewPassPage__form\":\"SetNewPass_setNewPassPage__form__21O7x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signInPage\":\"SignIn_signInPage__WFi5q\",\"signInPage__form\":\"SignIn_signInPage__form__1tCuA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerPage\":\"Register_registerPage__5npDg\",\"registerPage__form\":\"Register_registerPage__form__2krKA\"};"],"sourceRoot":""}